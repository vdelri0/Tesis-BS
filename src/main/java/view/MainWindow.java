/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Coordinator;
import java.awt.BorderLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import model.Line;
import model.OFGelement;
import org.apache.commons.io.FilenameUtils;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rtextarea.RTextScrollPane;

/**
 * This jframeForm is the first view of the UI
 *
 * @author victor del rio
 */
public class MainWindow extends javax.swing.JFrame implements MouseListener {
    private Coordinator coordinator;
    private RSyntaxTextArea textArea;
    private RTextScrollPane textScrollPane;
    private JPanel panel;
    private File currentFile;



    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        add(initTextArea());
        setTitle("TesisProgramaFinal");
        setResizable(false);
        setLocationRelativeTo(null);
        jTree1.setRootVisible(false);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        pack();
    }
    
    public JPanel initTextArea(){
        panel = new JPanel(new BorderLayout());
        panel.setBounds(310, 12,686, 555);
        textArea = new RSyntaxTextArea();
        textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        textArea.setCodeFoldingEnabled(true);
        textArea.setEditable(false);
        textArea.addMouseListener(this);
        textScrollPane = new RTextScrollPane(textArea);
        panel.add(textScrollPane);
        return panel;
    }
    
    public void defineJtreeModel(File fileRoot) {
        //File fileExample = new File("");
        DefaultMutableTreeNode root = new DefaultMutableTreeNode(fileRoot);
        DefaultTreeModel model = new DefaultTreeModel(root);
        File[] subItems = fileRoot.listFiles();
            for (File file : subItems) {
                root.add(new DefaultMutableTreeNode(file));
            }
        jTree1.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        jMenu1.setText("File");

        jMenuItem1.setText(" Open File");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addGap(716, 716, 716))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            openFolder();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
        String node = evt.getNewLeadSelectionPath().getLastPathComponent().toString();
        File file = new File(node);
        String ext = FilenameUtils.getExtension(node);
        if(!file.isDirectory() && "java".equals(ext)){
            try {
                textArea.setText(coordinator.readFileCode(file));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jTree1ValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

    public void mouseClicked(MouseEvent e) {
            RSyntaxTextArea textArea = ((RSyntaxTextArea)e.getComponent());
            String[] text = textArea.getText().split("\n");
            Line line = coordinator.analyzeLineOfCode(text[textArea.getCaretLineNumber()]);
            line.setIndex(textArea.getCaretLineNumber());
            if(line.isState() && line.getType().equals("objectMethodInvocation")){
                try {
                    OFGView ofgView= new OFGView();
                    OFGelement ofg = coordinator.analyzeAllSourceCode(currentFile, line);
                    ofgView.setOfg(ofg);
                    ofgView.initGraph();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Por favor elija una estructura valida");
            }
//              Obtener el texto y mostrarlo en el jtextpanel
//              jTextPane1.setText(line.getType());
    }

    public void mousePressed(MouseEvent e) {
    }

    public void mouseReleased(MouseEvent e) {
    }

    public void mouseEntered(MouseEvent e) {
    }

    public void mouseExited(MouseEvent e) {
    }

    public Coordinator getCoordinator() {
        return coordinator;
    }

    public void setCoordinator(Coordinator coordinator) {
        this.coordinator = coordinator;
    }
    
    public void openFolder() throws FileNotFoundException{
        JFileChooser file = new JFileChooser();
        file.setAcceptAllFileFilterUsed(false);
        file.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        file.showOpenDialog(this);
        File path = file.getSelectedFile();
        if(path != null && path.exists() && path.isDirectory()){
            defineTreeModel(path);
            currentFile = path;
        } else {
            JOptionPane.showMessageDialog(null, "Por favor seleccione algun proyecto");
            
        }
    }
    
    public void defineTreeModel(File path){
        boolean validFolder = false;
        String[] names = path.list();
        for(String name : names){
            if("src".equals(name)){
                validFolder = true;
            } 
        }
        if(validFolder){
            if (new File(path.getAbsolutePath() + "\\" + "src").isDirectory()){
                TreeModel model = new FileTreeModel(path);
                jTree1.setModel(model);
                jTree1.setRootVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "La carpeta seleccionada no corresponde a un proyecto");
            }
        } else {
                JOptionPane.showMessageDialog(null, "La carpeta seleccionada no corresponde a un proyecto");
        }    
    }

}
